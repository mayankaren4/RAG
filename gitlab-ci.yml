stages:
  - build
  - deploy

# Build stage: Install dependencies, build Docker image, and save it
build:
  stage: build
  image: python:3.11-slim
  script:
    - pip install -r requirements.txt
    - docker build -t rag_app .
    - docker save rag_app | gzip > rag_app.tar.gz
  artifacts:
    paths:
      - rag_app.tar.gz  # Save Docker image as artifact for deploy stage

# Deploy stage: Transfer Docker image to the server and run it
deploy:
  stage: deploy
  image: ruby:2.6  # Using an image with SSH tools
  script:
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa  # Inject private key stored as GitLab CI/CD variable
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan your-server.com >> ~/.ssh/known_hosts  # Add server to known hosts
    - scp rag_app.tar.gz user@your-server:/path/to/deploy/  # Copy the image to the server
    - ssh user@your-server "
        cd /path/to/deploy &&
        tar -xvzf rag_app.tar.gz &&  # Extract the image
        docker load < rag_app.tar &&  # Load the image
        docker run -d -p 1025:1025 rag_app  # Run the app on port 8000
      "
  only:
    - main  # Trigger deploy only on changes to the main branch
